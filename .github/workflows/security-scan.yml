---
name: MegaLinter Security & Quality Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      linter_flavor:
        description: 'MegaLinter flavor to use'
        required: false
        default: 'security'
        type: choice
        options:
          - security
          - all
          - dotnet
          - go
          - java
          - javascript
          - python

# Global permissions (minimal)
permissions:
  contents: read

env:
  # Environment variables for consistency
  MEGALINTER_FLAVOR: ${{ github.event.inputs.linter_flavor || 'security' }}
  MEGALINTER_CONFIG: .mega-linter.yml
  APPLY_FIXES: none
  UPLOAD_TO_GITHUB_SECURITY: true

jobs:
  megalinter:
    name: MegaLinter (${{ github.event.inputs.linter_flavor || 'security' }})
    runs-on: ubuntu-24.04  # Latest Ubuntu LTS
    timeout-minutes: 60    # Increased for comprehensive scanning

    # Job-specific permissions (principle of least privilege)
    permissions:
      contents: read
      security-events: write
      issues: write
      pull-requests: write
      actions: read
      id-token: write  # For OIDC if needed

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            megalinter.io:443
            registry.npmjs.org:443
            pypi.org:443

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false  # Security best practice
          token: ${{ secrets.GITHUB_TOKEN }}

      # Cache MegaLinter dependencies for faster runs
      - name: Cache MegaLinter
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/megalinter
            /tmp/megalinter-cache
          key: megalinter-${{ runner.os }}-${{ hashFiles('.mega-linter.yml') }}
          restore-keys: |
            megalinter-${{ runner.os }}-

      - name: Run MegaLinter
        uses: oxsecurity/megalinter@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MEGALINTER_CONFIG: ${{ env.MEGALINTER_CONFIG }}
          MEGALINTER_FLAVOR: ${{ env.MEGALINTER_FLAVOR }}
          APPLY_FIXES: ${{ env.APPLY_FIXES }}
          UPLOAD_TO_GITHUB_SECURITY: ${{ env.UPLOAD_TO_GITHUB_SECURITY }}
          # Performance optimizations
          PARALLEL: true
          LOG_LEVEL: INFO
          # Security enhancements
          DISABLE_ERRORS: false
          FAIL_IF_UPDATED_SOURCES: false

      # Enhanced artifact upload with conditional paths
      - name: Upload MegaLinter artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: megalinter-reports-${{ env.MEGALINTER_FLAVOR }}
          path: |
            megalinter-reports/
            mega-linter.log
            .megalinter-reports/
          retention-days: 30
          if-no-files-found: warn
          compression-level: 6

      # Generate workflow summary
      - name: Generate Workflow Summary
        if: always()
        run: |
          echo "## 🛡️ MegaLinter Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Flavor Used | \`${{ env.MEGALINTER_FLAVOR }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Runner OS | \`${{ runner.os }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Triggered By | \`${{ github.actor }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Event | \`${{ github.event_name }}\` |" >> $GITHUB_STEP_SUMMARY

          if [ -f "megalinter-reports/megalinter.log" ]; then
            echo "| Log File | ✅ Generated |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Log File | ❌ Not Found |" >> $GITHUB_STEP_SUMMARY
          fi
