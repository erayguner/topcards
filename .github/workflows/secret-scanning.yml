name: Secret Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  trufflehog:
    name: 'TruffleHog Secret Scan'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  gitleaks:
    name: 'Gitleaks Secret Scan'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  semgrep-secrets:
    name: 'Semgrep Secret Scan'
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Semgrep
      run: |
        semgrep \
          --config=auto \
          --sarif \
          --output=semgrep-results.sarif \
          --severity=ERROR \
          --severity=WARNING \
          .

    - name: Upload Semgrep results to GitHub Advanced Security
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep-results.sarif

  detect-secrets:
    name: 'IBM Detect Secrets'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install detect-secrets
      run: pip install detect-secrets

    - name: Run detect-secrets scan
      run: |
        detect-secrets scan --all-files --baseline .secrets.baseline || true
        if [ -f .secrets.baseline ]; then
          detect-secrets audit .secrets.baseline --report --fail-on-unaudited
        fi

    - name: Upload secrets baseline
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: secrets-baseline
        path: .secrets.baseline

  security-summary:
    name: 'Security Summary'
    needs: [trufflehog, gitleaks, semgrep-secrets, detect-secrets]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Security Scan Summary
      run: |
        echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "| Tool | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| TruffleHog | ${{ needs.trufflehog.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Gitleaks | ${{ needs.gitleaks.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Semgrep | ${{ needs.semgrep-secrets.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Detect Secrets | ${{ needs.detect-secrets.result }} |" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.trufflehog.result }}" == "failure" ]] || \
           [[ "${{ needs.gitleaks.result }}" == "failure" ]] || \
           [[ "${{ needs.semgrep-secrets.result }}" == "failure" ]] || \
           [[ "${{ needs.detect-secrets.result }}" == "failure" ]]; then
          echo "⚠️ **Security issues detected!** Please review the scan results." >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ **All security scans passed!**" >> $GITHUB_STEP_SUMMARY
        fi